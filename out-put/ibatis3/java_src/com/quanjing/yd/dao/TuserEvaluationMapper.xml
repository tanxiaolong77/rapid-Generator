<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.quanjing.platform.dao.TuserEvaluationDao">

	
    <resultMap id="TuserEvaluation" type="com.quanjing.model.platform.TuserEvaluation">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="evaluatedUserId" column="evaluated_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="activityId" column="activity_id"/>
        <result property="offerId" column="offer_id"/>
        <result property="star" column="star"/>
        <result property="truthInfoStar" column="truth_info_star"/>
        <result property="friendlyStar" column="friendly_star"/>
        <result property="appearStar" column="appear_star"/>
        <result property="evaluation" column="evaluation"/>
    </resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        	id ,
        	user_id ,
        	evaluated_user_id ,
        	create_time ,
        	type ,
        	status ,
        	activity_id ,
        	offer_id ,
        	star ,
        	truth_info_star ,
        	friendly_star ,
        	appear_star ,
        	evaluation 
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" 
	>
    <![CDATA[
        INSERT INTO t_user_evaluation (
        	id ,
        	user_id ,
        	evaluated_user_id ,
        	create_time ,
        	type ,
        	status ,
        	activity_id ,
        	offer_id ,
        	star ,
        	truth_info_star ,
        	friendly_star ,
        	appear_star ,
        	evaluation 
        ) VALUES (
        	#{id} ,
        	#{userId} ,
        	#{evaluatedUserId} ,
        	#{createTime} ,
        	#{type} ,
        	#{status} ,
        	#{activityId} ,
        	#{offerId} ,
        	#{star} ,
        	#{truthInfoStar} ,
        	#{friendlyStar} ,
        	#{appearStar} ,
        	#{evaluation} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
        UPDATE t_user_evaluation
        <trim prefix="SET" suffixOverrides=",">  
	        <if test="@Ognl@isNotEmpty(userId)">
	        user_id = #{userId,jdbcType=BIGINT} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(evaluatedUserId)">
	        evaluated_user_id = #{evaluatedUserId,jdbcType=BIGINT} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(createTime)">
	        create_time = #{createTime,jdbcType=TIMESTAMP} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(type)">
	        type = #{type,jdbcType=INTEGER} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(status)">
	        status = #{status,jdbcType=INTEGER} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(activityId)">
	        activity_id = #{activityId,jdbcType=BIGINT} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(offerId)">
	        offer_id = #{offerId,jdbcType=BIGINT} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(star)">
	        star = #{star,jdbcType=DECIMAL} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(truthInfoStar)">
	        truth_info_star = #{truthInfoStar,jdbcType=DECIMAL} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(friendlyStar)">
	        friendly_star = #{friendlyStar,jdbcType=DECIMAL} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(appearStar)">
	        appear_star = #{appearStar,jdbcType=DECIMAL} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(evaluation)">
	        evaluation = #{evaluation,jdbcType=VARCHAR} 
	        </if>
 	     </trim>
        WHERE 
	        id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_user_evaluation 
        WHERE
	        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="TuserEvaluation">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_user_evaluation 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
		
    <select id="findCount" resultType="long">
        SELECT count(*) FROM t_user_evaluation 
		<include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="TuserEvaluation">
    	SELECT <include refid="columns" />
	    FROM t_user_evaluation 
		<include refid="findWhere"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				AND user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(evaluatedUserId)">
				AND evaluated_user_id = #{evaluatedUserId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND create_time >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND create_time &lt;= #{createTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(activityId)">
				AND activity_id = #{activityId}
			</if>
	       <if test="@Ognl@isNotEmpty(offerId)">
				AND offer_id = #{offerId}
			</if>
	       <if test="@Ognl@isNotEmpty(star)">
				AND star = #{star}
			</if>
	       <if test="@Ognl@isNotEmpty(truthInfoStar)">
				AND truth_info_star = #{truthInfoStar}
			</if>
	       <if test="@Ognl@isNotEmpty(friendlyStar)">
				AND friendly_star = #{friendlyStar}
			</if>
	       <if test="@Ognl@isNotEmpty(appearStar)">
				AND appear_star = #{appearStar}
			</if>
	       <if test="@Ognl@isNotEmpty(evaluation)">
				AND evaluation = #{evaluation}
			</if>
		</where>
	</sql>
	
</mapper>

